// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ryuka.NlayerApi.Infrastructure.Data;

#nullable disable

namespace Ryuka.NlayerApi.Infrastructure.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20250615155112_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ryuka.NlayerApi.Core.Entities.ParkingRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EntryTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExitTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SlotId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SlotId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("Ryuka.NlayerApi.Core.Entities.Slot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("isOccupied")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Slots");
                });

            modelBuilder.Entity("Ryuka.NlayerApi.Core.Entities.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("Ryuka.NlayerApi.Core.Entities.ParkingRecord", b =>
                {
                    b.HasOne("Ryuka.NlayerApi.Core.Entities.Slot", "Slot")
                        .WithMany("ParkingRecords")
                        .HasForeignKey("SlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ryuka.NlayerApi.Core.Entities.Vehicle", "Vehicle")
                        .WithMany("ParkingRecords")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Slot");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("Ryuka.NlayerApi.Core.Entities.Slot", b =>
                {
                    b.Navigation("ParkingRecords");
                });

            modelBuilder.Entity("Ryuka.NlayerApi.Core.Entities.Vehicle", b =>
                {
                    b.Navigation("ParkingRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
